#include <iostream>
using namespace std;
int c1[4001], c2[4001];
int main()
{
    int n = 10, i, j, k, b; //书中要求凑成n为一角的硬币  硬币为1、2、5 分,数量无限

    for (i = 0; i <= n; ++i) //此时的n是第一个括的所有项个数
    {
        c1[i] = 1;
        c2[i] = 0;
    }

    for (i = 2; i <= 5; i += 3) //还有2 分及5分两种硬币，i这里为2与2+3 的两个循环
    {
        for (j = 0; j <= n; ++j) //j是第一个括号里的每一项x^j的指数j
        {
            for (k = 0; k + j <= n; k += i) //k第二个括号的每一项x^k的指数k
            {
                c2[j + k] += c1[j]; //目前的第一括号与第二括号两两相乘
                                    //由于第二括号的系数全为1，相乘后的系数就是c1[j],累加即可
            }
        }
        for (j = 0; j <= n; ++j) // 把c2中的值给c1,并把c2清0
        {
            c1[j] = c2[j];
            c2[j] = 0;
        }
    }
    cout << c1[n] << endl; //输出能凑成n大小的方案数
    return 0;
}